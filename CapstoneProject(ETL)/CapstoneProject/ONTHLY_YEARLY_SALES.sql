-- Creating a Monthly and Yearly Sales Trends Analysis

-- Getting Last Date
SET LAST_SOLD_DATE_SK = (SELECT MAX(SOLD_YEAR) FROM TPCDS.ANALYTICS.MONTHLY_YEARLY_SALES);

-- Removing partial records from the last date
DELETE FROM TPCDS.ANALYTICS.MONTHLY_YEARLY_SALES WHERE SOLD_YEAR = $LAST_SOLD_DATE_SK;

-- compiling all incremental sales records
CREATE OR REPLACE TEMPORARY TABLE TPCDS.ANALYTICS.MONTHLY_YEARLY_SALES_TMP AS (
    SELECT
        ds.WAREHOUSE_SK,
        ds.ITEM_SK,
        dd.YR_NUM AS SOLD_YEAR,
        dd.MNTH_NUM AS SOLD_MONTH,
        SUM(ds.DAILY_QTY) AS SUM_QTY_MONTH,
        SUM(ds.DAILY_SALES_AMT) AS SUM_AMT_MONTH,
        SUM(ds.DAILY_NET_PROFIT) AS SUM_PROFIT_MONTH
    FROM
        TPCDS.INTERMEDIATE.DAILY_AGGREGATED_SALES ds
    JOIN
        TPCDS.RAW.DATE_DIM dd ON ds.SOLD_DATE_SK = dd.D_DATE_SK
    GROUP BY
        ds.WAREHOUSE_SK,
        ds.ITEM_SK,
        dd.YR_NUM,
        dd.MNTH_NUM
);

-- Inserting new records
INSERT INTO TPCDS.ANALYTICS.MONTHLY_YEARLY_SALES
(
    WAREHOUSE_SK, 
    ITEM_SK, 
    SOLD_YEAR, 
    SOLD_MONTH, 
    SUM_QTY_MONTH, 
    SUM_AMT_MONTH, 
    SUM_PROFIT_MONTH
)
SELECT 
    WAREHOUSE_SK, 
    ITEM_SK, 
    SOLD_YEAR, 
    SOLD_MONTH, 
    SUM_QTY_MONTH, 
    SUM_AMT_MONTH, 
    SUM_PROFIT_MONTH
FROM TPCDS.ANALYTICS.MONTHLY_YEARLY_SALES_TMP;

SELECT * FROM TPCDS.ANALYTICS.MONTHLY_YEARLY_SALES;
